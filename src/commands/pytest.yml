description: >
  This command sets up the venv, runs pytests with coverage, and if applicable uploads results to sonar

parameters:
  install_cython:
    description: Decide if cython needs to be installed (Only mark as true if a dependency needs this library)
    type: boolean
    default: false

  cython_version:
    description: Version of cython to install
    type: string
    default: 0.28.5

  push_to_sonar:
    description: Decide if pytest results should be pushed to sonar (To use this option ensure that a sonar-project.properties file is in the root directory).
    type: boolean
    default: true

  source_dir:
    description: root directory of source code
    type: string
    default: src

  test_dir:
    description: root directory of tests
    type: string
    default: tests

  install_requirements_from_setup:
    description: If true use setup.py to install requirements (if false requirements.txt is used instead)
    type: boolean
    default: false

steps:
  - setup_venv:
      install_requirements: true
      install_cython: <<parameters.install_cython>>
      cython_version: <<parameters.cython_version>>
      install_requirements_from_setup: <<parameters.install_requirements_from_setup>>
  - restore_cache:
      keys:
        - python-orb-{{ .Environment.CACHE_VERSION }}-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ checksum "requirements.txt" }}
  - run:
      name: Run coverage tests with pytest
      command: |
        . venv/bin/activate
        coverage run --source=<<parameters.source_dir>> -m py.test <<parameters.test_dir>>
  - run:
      name: Generate coverage report
      command: |
        . venv/bin/activate
        coverage xml -o test-coverage/coverage.xml
        coverage html -d test-coverage/coverage.html
  - store_test_results:
      path: test-coverage
  - store_artifacts:
      path: test-coverage
  - when:
      condition: <<parameters.push_to_sonar>>
      steps:
        - sonarcloud/scan
